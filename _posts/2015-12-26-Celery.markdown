---
layout: post
title:  "Celery 101"
date:   2015-12-26 01:00:00
categories: "celery"
asset_path: /assets/posts/Celery/
tags: ['Celery', 'RabbitMQ', 'GCM']
---

<img src="{{ page.asset_path }}domino.jpg" class="img-responsive img-rounded">

# Tutorial via Docker

### Hello World

backend를 해줘야지 result를 받아볼수 있습니다. (wait()함수 같은거..)

{% highlight python %}
from celery import Celery
app = Celery('tutorial',
             backend='redis://172.17.0.1:6381/15',
             broker='amqp://172.17.0.1:5672')

@app.task
def add(x, y):
    sleep(1)
    return x + y
{% endhighlight %}

### Running Celery Worker in Development

{% highlight bash %}
celery worker -A tutorial --loglevel=debug
{% endhighlight %}


# Running in Production

### Configuration

먼저 [generic-init.d][generic-init.d] 에 가서 해당 파일을 /etc/init.d/ 여기에 복사합니다.

[generic-init.d]:https://github.com/celery/celery/tree/3.1/extra/generic-init.d/

Permission을 줍니다.

{% highlight bash %}
cd /etc/init.d/
sudo chown root:root celeryd
{% endhighlight %}

리부트할때 자동으로 켜지게 하려면 다음과 같이 합니다.

{% highlight bash %}
sudo update-rc.d celeryd defaults
sudo update-rc.d celeryd enable
{% endhighlight %}

Celery 서비스를 키고, 끄는것은 다음과 같이 합니다.

{% highlight bash %}
/etc/default/celeryd start
/etc/default/celeryd stop
{% endhighlight %}


이후에 /etc/default/celeryd 라는 파일은 **만들어**줍니다.

{% highlight bash %}
# Names of nodes to start
#   most people will only start one node:
CELERYD_NODES="worker1"
#   but you can also start multiple and configure settings
#   for each in CELERYD_OPTS (see `celery multi --help` for examples):
#CELERYD_NODES="worker1 worker2 worker3"
#   alternatively, you can specify the number of nodes to start:
#CELERYD_NODES=10

# Absolute or relative path to the 'celery' command:
CELERY_BIN="/usr/local/bin/celery"
#CELERY_BIN="/virtualenvs/def/bin/celery"

# App instance to use
# comment out this line if you don't use an app
CELERY_APP="proj"
# or fully qualified:
#CELERY_APP="proj.tasks:app"

# Where to chdir at start.
CELERYD_CHDIR="/opt/Myproject/"

# Extra command-line arguments to the worker
CELERYD_OPTS="--time-limit=300 --concurrency=8"

# %N will be replaced with the first part of the nodename.
CELERYD_LOG_FILE="/var/log/celery/%N.log"
CELERYD_PID_FILE="/var/run/celery/%N.pid"

# Workers should run as an unprivileged user.
#   You need to create this user manually (or you can choose
#   a user/group combination that already exists, e.g. nobody).
CELERYD_USER="celery"
CELERYD_GROUP="celery"

# If enabled pid and log directories will be created if missing,
# and owned by the userid/group configured.
CELERY_CREATE_DIRS=1
{% endhighlight %}


Multi로 시작하는 방법..

{% highlight bash %}
celery multi start worker1
celery multi stop worker1
{% endhighlight %}