---
layout: post
title:  "TF-IDF"
date:   2016-04-28 01:00:00
categories: "nlp"
asset_path: /assets/images/
tags: ['tfidf']
---



# 1. TF-IDF

## 1.1 TF

$$ TF(t, d) = \frac{\text{t의 갯수 in d}}{\text{단어의 갯수 in d}} $$

 - TF는 기본적으로 문서 하나에서의 특정 단어 갯수를 의미 한다. 
 - **stopwords 가 높은 값으로 나옴**
 - t : term (word)
 - d : document (문서 하나를 의미)
 - corpus: set of documents (전체 문서들을 의미)
 
TF만으로 단어의 중요성을 수치로 나타내면 좋겠지만, 문제는 is, are, the 같은 stopwords 가 높은 값을 가지게 됩니다. <br>
보완할 필요가 있습니다. 


## 1.2 DF 

$$ DF = \text{t를 포함하고 있는 document의 갯수} $$

예를 들어, "사과"라는 단어가 document 1 에서 50번 나오고, document 2에서 100번, 그리고 document 3에서 0번 나온다면.. <br>
DF의 값은 2 입니다. 왜냐하면 "사과"를 포함하고 있는 **문서의 갯수**는 2개 이기 때문입니다. 

## 1.3 IDF

$$ \begin{align}
\text{IDF (vanila)} &= \log\left( \frac{N}{df} \right) \\
\text{IDF (smooth)} &= \log\left( \frac{N}{df} \right) +1 \\
\text{IDF (another smooth)} &= \log\left( \frac{N}{df + 1} \right) +1 \\
\end{align} $$
 
 - 주 목적은 TF에서 높에 나온 stopwords들을 값을 낮추도록 weight를 줌
 - **stopwods에 대한 값은 매우 낮게 나옴**
 - log 를 사용하는 이유는 N값이 높아질수록 값이 커지는 문제를 해결하기 위해서
 
 
## 1.4 TF-IDF 

$$ \text{TF-IDF}(t, d) = TF \times IDF $$

최종적으로 TF 그리고 IDF 를 서로 곱해주면 TF-IDF 값이 나옵니다. 

\* SKLearn에서 구현한 것을 똑같이 해보려고 하였으나, 공식이 좀 다른듯 함. <br>

# 2. SKLearn 

## 2.1 Data 

{% highlight python %}
corpus = [
    'This is the first document. is this first one? this is the first one',
    'This document is the second document. the document!',
    'this is document. is this the second document?',
    'Is this the robot document?',
    'this is the document. this is the first one document.',
    'this this this the the the first is is is document document',
]
{% endhighlight %}

## 2.2 Code

{% highlight python %}
import seaborn as sns
from sklearn.feature_extraction.text import TfidfVectorizer
cm = sns.light_palette('red', as_cmap=True)

vectorizer = TfidfVectorizer()
tfidf_mtx = vectorizer.fit_transform(corpus).toarray()

tfidf_df = pd.DataFrame(tfidf_mtx.round(2),
                        columns=vectorizer.get_feature_names())
tfidf_df.style.background_gradient(cmap=cm)
{% endhighlight %}

<img src="{{ page.asset_path }}tfidf_df.png" class="img-responsive img-rounded img-fluid center">