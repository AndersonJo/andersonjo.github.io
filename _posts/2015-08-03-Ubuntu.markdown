---
layout: post
title:  "Ubuntu 15.04"
date:   2015-08-03 02:00:00
categories: "ubuntu"
asset_path: /assets/posts/Ubuntu15.04/
tags: ['RVM', 'JAVA', '.bash.rc', 'format', 'my.cnf']

---

이번에 GTX960 그래픽카드를 질렀습니다.<br> 
설치 환경은 Ubuntu 15.04 + GTX960 인데, 혹시 나중에 다시 보게 될까봐 여기에다가 적습니다.

<header>
<img src="{{page.asset_path}}gtx960.jpg" class="img-responsive img-rounded">
</header>

### ACPI PPC Probe failed

GTX960 디바이스를 읽지 못해서 생기는 에러입니다. <br>
그냥 warning 정도의 에러인데.. 이것과 상관없이.. 화면이 보이지 않는다면.. <br>
**nomodeset** 옵션을 주고 우분투를 설치또는 로그인하면 됩니다.
 
> 우분투 설치시에는 F6 (other options)를 눌러서 옵션을 지정할수 있습니다.

### Locale Setup

{% highlight bash %}
sudo locale-gen ko_KR.UTF-8
{% endhighlight %}

### 32bit Libraries (Optional)
GTX960 Driver를 설치하기전, 32bit 라이브러리를 설치해줍니다. <br>
해당 라이브러리는 또한 Android Studio사용시 설치 가능하게 해줍니다. 

{% highlight bash%}
sudo apt-get install libc6:i386 libncurses5:i386 libstdc++6:i386 lib32z1 lib32z1-dev
{% endhighlight %}


### Oracle Java 

{% highlight bash%}
sudo add-apt-repository ppa:webupd8team/java
sudo apt-get update
sudo apt-get install oracle-java8-installer
{% endhighlight %}


### 벼루 (Optional)

{% highlight bash%}
sudo apt-get install uim uim-byeoru
uim-pref-gtk
{% endhighlight %}

Alt키 에러시 다음과 같이 합니다.

{% highlight bash %}
sudo vi /usr//share/X11/xkb/symbols/altwin
{% endhighlight %}

다음 부분을 comment out 합니다. (삭제 시켜줍니다.)
{% highlight bash %}
//    key <RALT> { type[Group1] = "TWO_LEVEL",
//                symbols[Group1] = [ Alt_R, Meta_R ] };
{% endhighlight %}

Text Entry에서 Korea (101/104 key compatible)을 추가시켜줍니다.<br>
다음의 파일들을 모두 삭제시킵니다.

{% highlight bash %}
sudo rm -fv /var/lib/xkb/*
{% endhighlight %}

리부트 필요

{% highlight bash %}
sudo reboot
{% endhighlight %}





### XClip (Optional)

{% highlight bash%}
sudo apt-get install xclip
{% endhighlight %}

### Install PIP

apt-get install python-pip 하지 말것!

{% highlight bash %}
wget https://bootstrap.pypa.io/get-pip.py
sudo python get-pip.py
{% endhighlight %}

### Pillow Ubuntu Libraries (Optional)

{% highlight bash%}
sudo apt-get install libtiff5-dev libjpeg8-dev zlib1g-dev libfreetype6-dev liblcms2-dev libwebp-dev tcl8.6-dev tk8.6-dev python-tk
{% endhighlight %}

### Ruby Image Libraries (Optional)

{% highlight bash%}
sudo apt-get install optipng pngquant gifsicle pngcrush advancecomp pngnq jhead jpegoptim
{% endhighlight %}

### Command Prompt 설정 (Optional)

.bashrc 파일에 추가
*하둡, CUDA, Android, Java, Spark설정 모두 들어가있기 때문에 따로 설정 필요합니다.*

{% highlight bash%}
parse_git_branch() {

    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'

}
export PS1='\[\033[00;36m\]\u:\[\033[0;33m\]\W$(parse_git_branch)>\[\033[00m\]'
# Hostname Version
# export PS1='\[\033[00;36m\]$(hostname) \u:\[\033[0;33m\]\W$(parse_git_branch)>\[\033[00m\]'

# Android
export ANDROID_HOME=/home/anderson/apps/android-sdk
export PATH=$PATH:$ANDROID_HOME:$ANDROID_HOME/platform-tools

# Java
export JAVA_HOME=/usr/lib/jvm/java-8-oracle
unset JAVA_TOOL_OPTIONS

# Hadoop
export HADOOP_PREFIX=/usr/local/hadoop-2.7.2
export HADOOP_MAPRED_HOME=$HADOOP_PREFIX
export HADOOP_COMMON_HOME=$HADOOP_PREFIX
export HADOOP_HDFS_HOME=$HADOOP_PREFIX
export YARN_HOME=$HADOOP_PREFIX
export HADOOP_CONF_DIR=$HADOOP_PREFIX/conf
export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_PREFIX/lib/native
export HADOOP_OPTS="-Djava.library.path=$HADOOP_PREFIX/lib/native"
export HADOOP_CLASSPATH=$HADOOP_PREFIX/conf
export CLASSPATH=$CLASSPATH:$HADOOP_PREFIX/lib/*:.
export PATH=$PATH:$HADOOP_PREFIX/bin
export PATH=$PATH:$HADOOP_PREFIX/sbin

# Hive
export HIVE_HOME="/usr/local/hive"
export DERBY_HOME=/usr/local/derby
export CLASSPATH=$CLASSPATH:$HIVE_HOME/lib/*:.
export CLASSPATH=$CLASSPATH:$DERBY_HOME/lib/derby.jar
export CLASSPATH=$CLASSPATH:$DERBY_HOME/lib/derbytools.jar
export PATH=$PATH:$HIVE_HOME/bin
export PATH=$PATH:$DERBY_HOME/bin

# CUDA
export CUDAHOME=/usr/local/cuda
export PATH=$PATH:$CUDAHOME/bin
export LD_LIBRARY_PATH=$CUDAHOME/lib64:/lib

# Flume
export FLUME_HOME=/usr/local/flume
export PATH=$PATH:$FLUME_HOME/bin
export CLASSPATH=$CLASSPATH:$FLUME_HOME/lib/*

#Sqoop
export SQOOP_HOME=/usr/local/sqoop
export PATH=$PATH:$SQOOP_HOME/bin
export CLASSPATH=$CLASSPATH:$SQOOP_HOME/lib/*

# Spark
export SPARK_HOME=/home/anderson/apps/spark-2.0.0-bin-hadoop2.7
export PYTHONPATH=$PYTHONPATH:$SPARK_HOME/python
export PYTHONPATH=$PYTHONPATH:$SPARK_HOME/python/lib/py4j-0.9-src.zip
export PATH=$PATH:$SPARK_HOME/bin

# RVM
export PATH="$PATH:$HOME/.rvm/bin" # Add RVM to PATH for scripting
export PATH="$HOME/.rvm/gems/ruby-2.1.0/bin":$PATH

# Oracle
export ORACLE_HOME=/usr/lib/oracle/12.1/client64/
{% endhighlight %}


### Increase Watch Limit

/etc/sysctl.conf 파일에다가 다음을 추가합니다.<br>
[watches-limlit][watches-limlit]

{% highlight bash %}
fs.inotify.max_user_watches = 524288
{% endhighlight %}


{% highlight bash %}
sudo sysctl -p
{% endhighlight %}

### Sublime (Optional)

**GCC Configuration**

~/.config/sublime-text-3/Packages/User 에다가 넣으면 됩니다.

[c.sublime-build][c.sublime]

{% highlight json %}
{
	"cmd" : ["gcc ${file_name} -o ${file_base_name} && ${file_path}/${file_base_name}"],
	"shell" : true,
	"selector" : "source.c",
	"working_dir" : "$file_path",
}
{% endhighlight %}

**Package Controller**

Ctrl + ` 후 다음을 붙여넣기 합니다.

{% highlight python %}
import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)
{% endhighlight %}

Ctrl + Shift + p 누른 후 Package control: Install Package 명령어로 Package 설치


### Ruby IRC (Optional)

~ 위치에 .irbrc 파일에 다음을 저장합니다.

{% highlight ruby %}
require 'irb/completion'
require 'map_by_method'
require 'what_methods'
require 'pp'
IRB.conf[:AUTO_INDENT]=true
{% endhighlight %}

### RVM (Optional)

{% highlight bash %}
gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
\curl -sSL https://get.rvm.io | bash -s stable
{% endhighlight %}

특정 버젼을 자동 실행합니다.
{% highlight bash %}
bash -l -c 'rvm use ruby-dev-2.1.0'
{% endhighlight %}

### SBT

[Installing SBT on Linux][Installing SBT on Linux]를 참고.

{% highlight bash %}
echo "deb https://dl.bintray.com/sbt/debian /" | sudo tee -a /etc/apt/sources.list.d/sbt.list
sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 642AC823
sudo apt-get update
sudo apt-get install sbt
{% endhighlight %}


### Gradle 

~/.gradle/gradle.properties 에 다음을 추가시켜줍니다.
 
 
{% highlight bash %}
org.gradle.daemon=true
{% endhighlight %}



### Postgres

설치..
{% highlight bash %}
sudo apt-get install postgresql-client
sudo apt-get install postgresql postgresql-contrib
apt-cache search postgres
{% endhighlight %}

postgres 패스워드 변경
{% highlight text %}
sudo -u postgres psql postgres
\password postgres
{% endhighlight %}

peer -> md5 로 고친다.

{% highlight bash %}
sudo vi /etc/postgresql/9.4/main/pg_hba.conf
local   all             postgres                                md5
local   all             all                                     md5
sudo service postgresql restart
{% endhighlight %}

### MySQL

{% highlight text %}
sudo vi /etc/mysql/mysql.conf.d/mysqld.cnf

[mysqld_safe]
default-character-set=utf8

[mysqld]
collation-server = utf8_unicode_ci
init-connect='SET NAMES utf8'
character-set-server = utf8
{% endhighlight %}

### Oracle Client

먼저 [oracle-client]를 다운받습니다. 

* oracle-instantclinet-basic-.rpm
* oracle-instantclinet-devel-.rpm
* oracle-instantclinet-sqlplus-.rpm

{% highlight bash %}
sudo apt-get install alien
sudo apt-get install libaio1
sudo alien -i oracle-*

{% endhighlight %}


[c.sublime]: {{ page.asset_path }}c.sublime-build
[watches-limlit]: https://confluence.jetbrains.com/display/IDEADEV/Inotify+Watches+Limit
[oracle-client]: http://www.oracle.com/technetwork/database/features/instant-client/index-097480.html
[Installing SBT on Linux]: http://www.scala-sbt.org/0.13/docs/Installing-sbt-on-Linux.html