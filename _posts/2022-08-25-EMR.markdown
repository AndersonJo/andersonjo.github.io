---
layout: post
title:  "EMR & SPARK"
date:   2022-08-25 01:00:00
categories: "spark"
asset_path: /assets/images/
tags: ['hadoop']
---


# 1. Installation

## 1.1 Install Dependencies

{% highlight bash %}
$ pip install pyspark[all]
{% endhighlight %}


## 1.2 AWS Preparation 

EC2 KeyPair 를 미리 만들어놔야 합니다. 


## 1.3 S3 Bucket 

S3 Bucket을 생성합니다. 

Amazon EMR은 S3를 사용해서 데이터를 저장하고, 연산을 합니다.

- Bucket Name: `data-emr-tutorial`
- Region: `ap-northeast-2`
- ACL: ACL 비활성화됨(권장)


## 1.4 CSV Data


데이터는 [맥도날드 데이터](https://www.kaggle.com/datasets/thedevastator/mcdonalds-ice-cream-machines-broken-timeseries)를
사용합니다.<br>
데이터를 로컬 컴퓨터에 다운로드 받습니다.



## 1.5 Bootstrap (EMR-6.7.0 기준)

클러스터안의 모든 노드들이 동일한 패키지를 갖을 수 있도록 하기 위해서 bootstrap 파일을 만들어 줍니다.

**emr_bootstrap.sh**

가장 중요한 부분이 pip 버젼의 사용인데, `sudo pip` 사용시 에러가 납니다. (`sudo pip3` 는 가능)<br>
pip부분에서 에러가 난다면.. 일단 comment out 시키고 EC2가 생성되면.. 직접 들어가서 pip어떻게 사용되는지 확인하면 됩니다.<br>
또한 S3에 남겨지는 에러 메세지를 보면서 문제를 해결하는게 중요합니다. <br>
특히 spark관련해서 특정 버젼의 pyspark 설치가 필요 할 수 있습니다.

EMR 버젼에 따라서 pip-3.4 또는 pip-3.6 등등 모두 다른 버젼을 갖고 있습니다. <br>
문제는 특정 버젼을 정의시 업그레이드 또는 해당 버젼에서 지원하는 pip 버젼을 알고 있어야 함으로 좋은 방향은 아닙니다.<br>
따라서 `pip2` 또는 `pip3` 같은 방식으로 사용하는게 좋습니다. 

또한 `set -x -e` 를 사용했는데, 이는 추후 디버깅시에 어떤 명령어를 사용했는지를 로깅시에 파악하기 좋습니다. <br>
해당 명령어가 없다면 출력된 output만 있고, 어떤 명령어가 사용됐는지 안 보입니다. 

{% highlight bash %}
#!/bin/bash
set -x -e
aws s3 cp s3://data-emr-tutorial/bootstrap/requirements.txt ./
sudo pip3 install -U --upgrade pip
pip3 install -U -r requirements.txt
{% endhighlight %}



**requirements.txt**

`pyspark==2.3.4` 같은 정확한 버젼 설치가 필요하다.<br> 
이유는 다른 버젼이라면 sage-maker 와 충돌이 날 수 있는데 에러가 나면.. bootstrap 에서 에러가 나고.. 전체 클러스터가 떨어진다<br>
EMR-6.7.0 기준이다.

{% highlight bash %}
pandas
numpy
matplotlib
pyspark==2.3.4
{% endhighlight %}


## 1.5 Upload files

{% highlight bash %}
# 복사 / s3:// 반드시 있어야 함
$ aws s3 cp mcdonalds_dataset.csv s3://data-emr-tutorial/data/
$ aws s3 cp emr_bootstrap.sh s3://data-emr-tutorial/bootstrap/
$ aws s3 cp requirements.txt s3://data-emr-tutorial/bootstrap/

# 확인 / 끝에 slash 꼭 붙여줘야 함 / s3:// 로 시작 안해도 됨
$ aws s3 ls data-emr-tutorial/
{% endhighlight %}




## 1.6 Create a Cluster on EMR

AWS EMR 서비스를 들어온 다음에 Create Cluster를 누르면 다음과 같은 화면이 보입니다.<br> 
`고급 옵션으로 이동` or `Go to advanced options`을 누른후..

<img src="{{ page.asset_path }}emr-01.png" class="img-responsive img-rounded img-fluid center" style="border: 2px solid #333333">

다음이 포함되어 있어야 합니다. 

- Hadoop
- `JupyterHub`
- `JupyterEnterpriseGateway` - 추후 Notebook 사용시 필요
- `Spark`
- `Zeppelin`
- `Hue`
- `HBase`
- Pig
- 
그리고 스토리지 모드는 S3 를 사용하며 미리 만들어둔 s3://data-emr-tutorial/ 을 사용합니다. 

<img src="{{ page.asset_path }}emr-02.png" class="img-responsive img-rounded img-fluid center" style="border: 2px solid #333333">

Tutorial 에서는 `m4.xlarge` 를 사용합니다. (최소 16Gib 메모리가 필요. 그 이하면 클러스터 떠러짐) <br> 
또한 100Gb root device EBS volume 을 사용합니다.<br>
기본 10Gb를 사용시 용량문제로 bootstrap error 가 나옵니다.


<img src="{{ page.asset_path }}emr-04.png" class="img-responsive img-rounded img-fluid center" style="border: 2px solid #333333">


<img src="{{ page.asset_path }}emr-09.png" class="img-responsive img-rounded img-fluid center" style="border: 2px solid #333333">



그리고 부트스트랩 작업에서는 미리 올려둔 `emr_bootstrap.sh` 를 선택해줍니다.<br>
추가는 `부트스트랩 작업 추가`에서 `사용자 지정 작업` 을 선택후 `구성 및 추가` 를 누르면 됩니다.




<img src="{{ page.asset_path }}emr-06.png" class="img-responsive img-rounded img-fluid center" style="border: 2px solid #333333">

마지막으로 EC2 키 페어를 설정합니다. 

<img src="{{ page.asset_path }}emr-07.png" class="img-responsive img-rounded img-fluid center" style="border: 2px solid #333333">



# 2. 

# 1.7 Notebook

Amazon EMR 좌측 메뉴에서 `노트북`을 선택후 노트북 생성을 합니다. <br>
기존 클러스터 누르고, 위에서 만든 클러스터를 선택합니다. 

<img src="{{ page.asset_path }}emr-08.png" class="img-responsive img-rounded img-fluid center" style="border: 2px solid #333333">